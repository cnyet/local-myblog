/**
 * 模块管理
 */
var app = require("../index"),                          //入口文件
    config = require("../config/config"),               //配置文件
    debug = require("debug")("local-node:server"),
    http = require("http");

//设置端口
var port = normalizePort(process.env.PORT || config.port);
app.set("port", port);

//创建http服务器
var server = http.createServer(app);

//服务器监听端口，注册事件
server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

//格式化端口号
function normalizePort(val) {
    var port = parseInt(val, 10);
    if(isNaN(port)){
        return val;
    }
    if(port >= 0){
        return port;
    }
    return false;
}

//服务器错误事件的回调函数
function onError(error) {
    if(error.syscall !== "listen"){
        throw error;
    }
    var bind = typeof port === "string" ? "Pipe"+port : "Port"+port;

    switch(error.code){
        case "EACCES":
            console.error(bind + "requires elevated privileges");
            process.exit(1);
            break;
        case "EADDRINUSE":
            console.error(bind + "is already in use.");
            process.exit(1);
            break;
        default:
            throw error;
    }
}

//服务器监听事件回调函数
function onListening() {
    var addr = server.address(),
        bind = typeof addr === "string" ? "pipe" + addr : "port" + addr.port;
    debug("Listening on " + bind);
}